plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}



group = 'com.seeds'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.commons', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // DB
    runtimeOnly 'com.mysql:mysql-connector-j'   // MySQL

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT (JJWT 0.12.x : 현재 코드에 맞는 최신 API)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Google OAuth (현재 코드에서 사용)
    implementation 'com.google.api-client:google-api-client:1.34.0'
    implementation 'com.google.http-client:google-http-client-jackson2:1.41.0'
    implementation 'com.google.http-client:google-http-client-gson:1.41.0'


    // WebClient for AI server communication (minimal WebFlux)
    implementation 'org.springframework:spring-webflux:6.1.0'

    // AWS SDK for S3
    implementation 'software.amazon.awssdk:s3:2.21.29'
    implementation 'software.amazon.awssdk:auth:2.21.29'

    // Bean Validation (Hibernate Validator)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// AWS 배포를 위한 JAR 파일 생성
jar {
    enabled = false
    archiveClassifier = ''
}

bootJar {
    archiveFileName = 'nerget-backend.jar'
}